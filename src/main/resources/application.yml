spring:
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://${db.server}/sampledb?useUnicode=true&charaterEncoding=utf-8 # JVM System Properties로 전달받는다.
    username: sampleuser
    password: sampleuser
  jpa:
    hibernate:
      ddl-auto: update # create, create-drop, update, none. Table을 수동으로 관리하지 않으면 'update' 로 지정하자.
      # 자바 객체로 DB 객체를 만들 때의 이름을 underscore('_')가 아니라 CamelCase 방식으로 사용한다.
      # default: underscore 방식. DeptEmployee entity + employeeName property => dept_employee.employee_name
      # camelCase 방식. DeptEmployee entity + employeeName property => DeptEmployee.employeeName
      naming.physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5Dialect
        show_sql: false  # true로 하면 SQL이 두 번 출력된다.
        format_sql: true
        # use_sql_comments: true # JPA Entity를 comment로 출력한다.

# SQL + Binded Parameters를 로그 출력한다.
logging.level:
  org.hibernate.SQL: DEBUG
  org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  org.springframework.jdbc.core.JdbcTemplate: DEBUG
  org.springframework.jdbc.core.StatementCreatorUtils: TRACE